# crafting.py ‚Äî Pe≈Çny system rzemios≈Ça FIROS (Zastƒôpuje wszystko)

class Recipe:
    def __init__(self, name, materials, result, rarity="zwyk≈Çy", level_required=1, allowed_classes=["All"]):
        self.name = name
        self.materials = materials
        self.result = result
        self.rarity = rarity
        self.level_required = level_required
        self.allowed_classes = allowed_classes


class CraftingSystem:
    def __init__(self):
        self.recipes = self.load_recipes()

    def load_recipes(self):
        return [
            Recipe(
                name="Mikstura ≈ªycia",
                materials=["Kwiat ≈ªycia", "Czerwony Grzyb"],
                result={"name": "Mikstura ≈ªycia", "slot": "Backpack", "level": 1, "rarity": "zwyk≈Çy", "allowed_classes": ["All"]},
                rarity="zwyk≈Çy",
                level_required=1
            ),
            Recipe(
                name="Zw√≥j Ognia",
                materials=["Proch", "Kryszta≈Ç Ognia"],
                result={"name": "Zw√≥j Ognia", "slot": "Rune", "level": 2, "rarity": "rzadki", "allowed_classes": ["Mag"]}
            ),
            Recipe(
                name="Miecz ≈ªelazny",
                materials=["≈ªelazo", "Drewno"],
                result={"name": "Miecz ≈ªelazny", "slot": "Main Weapon", "level": 3, "rarity": "zwyk≈Çy", "allowed_classes": ["Wojownik", "Rogue"]}
            ),
            Recipe(
                name="Zbroja Cienia",
                materials=["Sk√≥ra Cienia", "Tkanka Upiora"],
                result={"name": "Zbroja Cienia", "slot": "Torso", "level": 5, "rarity": "epicki", "allowed_classes": ["Rogue", "Mag"]},
                rarity="epicki",
                level_required=5
            )
        ]

    def list_recipes(self):
        return [f"{r.name} (lvl {r.level_required}) ‚Üí {', '.join(r.materials)}" for r in self.recipes]

    def craft(self, selected_name, inventory, player_level, player_class):
        for recipe in self.recipes:
            if recipe.name == selected_name:
                # Sprawd≈∫ poziom i klasƒô
                if player_level < recipe.level_required:
                    return f"‚ùå Potrzebny poziom {recipe.level_required} do stworzenia {recipe.name}."

                if player_class not in recipe.allowed_classes and "All" not in recipe.allowed_classes:
                    return f"‚ùå Klasa {player_class} nie mo≈ºe stworzyƒá {recipe.name}."

                # Sprawd≈∫ materia≈Çy
                if all(any(item["name"] == mat for item in inventory) for mat in recipe.materials):
                    # Usu≈Ñ materia≈Çy
                    for mat in recipe.materials:
                        for item in inventory:
                            if item["name"] == mat:
                                inventory.remove(item)
                                break
                    # Dodaj efekt
                    inventory.append(recipe.result)
                    return f"üõ† Stworzono {recipe.result['name']}!"
                else:
                    return f"‚ùå Brakuje materia≈Ç√≥w do {recipe.name}."
        return "‚ùå Przepis nie znaleziony."

# Przyk≈Çad u≈ºycia ‚Äî tylko testowo:
if __name__ == "__main__":
    crafting = CraftingSystem()
    player_inventory = [
        {"name": "Kwiat ≈ªycia"}, {"name": "Czerwony Grzyb"}, {"name": "≈ªelazo"}, {"name": "Drewno"}
    ]
    print("üßæ Dostƒôpne przepisy:")
    for r in crafting.list_recipes():
        print(" -", r)

    result = crafting.craft("Mikstura ≈ªycia", player_inventory, player_level=2, player_class="Mag")
    print(result)
